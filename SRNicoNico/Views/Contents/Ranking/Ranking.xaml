<UserControl x:Class="SRNicoNico.Views.Ranking"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
             xmlns:v="clr-namespace:SRNicoNico.Views"
             xmlns:controls="clr-namespace:SRNicoNico.Views.Controls"
             d:DataContext="{d:DesignInstance Type=vm:RankingViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Loaded" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Background="{DynamicResource AlternationBackgroundBrushKey}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" FontSize="20" Height="30" Margin="5,0" />
                <controls:RoundButton Grid.Column="1" ToolTip="更新" Focusable="False" VerticalAlignment="Center" Margin="0,0,5,0" IconData="{StaticResource ReloadIcon}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodName="Reload" MethodTarget="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:RoundButton>
            </Grid>
            <ScrollViewer Grid.Row="1">
                <StackPanel>
                    <metro:TabView Focusable="False" ItemsSource="{Binding CustomRankingItems}" SelectedValue="{Binding SelectedItem}">
                        <metro:TabView.ItemTemplate>
                            <DataTemplate DataType="{x:Type metro:ITabItem}">
                                <TextBlock Margin="3,0,0,0" Text="{Binding Name}" ToolTip="{Binding Name}" FontSize="13.99" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
                            </DataTemplate>
                        </metro:TabView.ItemTemplate>
                    </metro:TabView>
                    <Rectangle Height=".99" Margin="20,10" Fill="{DynamicResource InactiveForegroundBrushKey}" Opacity="0.5">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RankingItems.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <metro:TabView Focusable="False" ItemsSource="{Binding RankingItems}" SelectedValue="{Binding SelectedItem}">
                        <metro:TabView.ItemTemplate>
                            <DataTemplate DataType="{x:Type metro:ITabItem}">
                                <TextBlock Margin="3,0,0,0" Text="{Binding Name}" ToolTip="{Binding Name}" FontSize="13.99" HorizontalAlignment="Left" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
                            </DataTemplate>
                        </metro:TabView.ItemTemplate>
                    </metro:TabView>
                </StackPanel>
            </ScrollViewer>
            <metro:ProgressRing Grid.Row="1" IsActive="{Binding IsActive}" />
        </Grid>
        <ItemsControl Grid.Column="1" ItemsSource="{Binding CustomRankingItems}">
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type vm:CustomRankingItemViewModel}">
                    <v:CustomRankingResult />
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:TabItemViewModel}">
                    <ContentControl Content="{Binding}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <ItemsControl Grid.Column="1" ItemsSource="{Binding RankingItems}">
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type vm:RankingItemViewModel}">
                    <v:RankingResult />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:HotTopicRankingItemViewModel}">
                    <v:HotTopicRankingResult />
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:TabItemViewModel}">
                    <ContentControl Content="{Binding}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
