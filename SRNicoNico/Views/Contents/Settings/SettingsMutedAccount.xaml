<UserControl x:Class="SRNicoNico.Views.SettingsMutedAccount"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
             xmlns:controls="clr-namespace:SRNicoNico.Views.Controls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance {x:Type vm:SettingsMutedAccountViewModel}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Loaded" />
        </i:EventTrigger>
        <i:EventTrigger EventName="IsVisibleChanged">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Reload" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Background="{DynamicResource AlternationBackgroundBrushKey}">
            <TextBlock Text="{Binding Name}" ToolTip="{Binding Name}" TextTrimming="CharacterEllipsis" FontSize="20" Margin="10,0" VerticalAlignment="Center" />
        </Grid>
            <StackPanel Grid.Row="1" Margin="10">
                <CheckBox IsChecked="{Binding HideMutedVideo, Mode=TwoWay}" FontSize="18" Content="ミュートした投稿者の動画のプレースホルダーを表示しない"
                          ToolTip="デフォルト: 無効 有効にすると「ミュートされているため表示されません」という文字を表示しません" HorizontalAlignment="Left" />
            </StackPanel>
        <Grid Grid.Row="2" Margin="10" Width="260" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel>
                <DockPanel Width="260">
                    <TextBlock DockPanel.Dock="Left" Text="ミュートしたアカウント:" FontSize="18" />
                    <controls:RoundButton DockPanel.Dock="Right" ToolTip="更新" Focusable="False" VerticalAlignment="Center" HorizontalAlignment="Right" IconData="{StaticResource ReloadIcon}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="Reload" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls:RoundButton>
                </DockPanel>
                <TextBlock Text="追加:" FontSize="16" />

                <StackPanel Orientation="Horizontal">
                    <ComboBox Width="100" VerticalContentAlignment="Center" SelectedItem="{Binding AccountType,Mode=TwoWay}" ItemsSource="{Binding AccountTypes}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <metro:PromptTextBox Text="{Binding AccountId, Mode=TwoWay}" Prompt="IDを入力" Width="100" MaxLength="20" />
                    <Button Content="追加" HorizontalAlignment="Right" Margin="10,0,0,0" Width="50">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="AddEntry" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </StackPanel>
            <ListBox Grid.Row="1" ItemsSource="{Binding MutedAccount}" Margin="0,10,0,0" VerticalAlignment="Top" BorderBrush="{DynamicResource AccentBrushKey}" BorderThickness="1">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl>
                            <ContentControl.Resources>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext}" />
                                </Style>
                            </ContentControl.Resources>
                            <ContentControl.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="削除">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <l:LivetCallMethodAction MethodTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}, Path=Tag}" MethodName="DeleteEntry" MethodParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                </ContextMenu>
                            </ContentControl.ContextMenu>
                            <ContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Background="Transparent">
                                            <TextBlock Width="100" Text="{Binding AccountType, Converter={StaticResource EnumDisplayConverter}}" FontSize="16" />
                                            <TextBlock Text="{Binding AccountId}" FontSize="16" />
                                        </StackPanel>
                                        <controls:RoundButton x:Name="deleteButton" Grid.Column="1" ToolTip="削除" Focusable="False" VerticalAlignment="Center" Visibility="Collapsed" HorizontalAlignment="Right"
                                                              IconData="{StaticResource CloseIcon}" IconWidth="10" IconHeight="10" EllipseDiameter="20">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <l:LivetCallMethodAction MethodTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext}" MethodName="DeleteEntry" MethodParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </controls:RoundButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="deleteButton" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
