<UserControl x:Class="SRNicoNico.Views.User"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
             xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
             xmlns:v="clr-namespace:SRNicoNico.Views"
             xmlns:controls="clr-namespace:SRNicoNico.Views.Controls"
             d:DataContext="{d:DesignInstance Type=vm:UserViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Loaded" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="150" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Background="{DynamicResource AlternationBackgroundBrushKey}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image Source="{Binding UserDetails.ThumbnailLargeUrl}" Margin="10" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel>
                    <Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{Binding UserDetails.Nickname}" FontSize="18" />
                            <controls:RoundButton IsEnabled="{Binding IsActive,Converter={StaticResource InvertBoolConverter}}" Margin="5,0,0,0" VerticalAlignment="Center" Focusable="False" HorizontalAlignment="Left">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <l:LivetCallMethodAction MethodName="ToggleFollow" MethodTarget="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <controls:RoundButton.Style>
                                    <Style TargetType="{x:Type controls:RoundButton}">
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding IsFollow}" Value="False">
                                                <Setter Property="ToolTip" Value="フォロー" />
                                                <Setter Property="IconData" Value="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z" />
                                            </DataTrigger>
                                            <DataTrigger  Binding="{Binding IsFollow}" Value="True">
                                                <Setter Property="ToolTip" Value="フォロー解除" />
                                                <Setter Property="IconData" Value="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:RoundButton.Style>
                            </controls:RoundButton>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <controls:RoundButton ToolTip="ブラウザで開く" Focusable="False" IconData="{StaticResource OpenBrowserIcon}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:LaunchUriOrFileAction Path="{Binding UserDetails.UserId, StringFormat='https://www.nicovideo.jp/user/{0}'}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </controls:RoundButton>
                            <controls:RoundButton ToolTip="更新" IconData="{StaticResource ReloadIcon}" Margin="5,0,0,0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Reload" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </controls:RoundButton>
                            <controls:RoundButton ToolTip="閉じる" IconData="{StaticResource CloseIcon}" Margin="5,0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Close" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </controls:RoundButton>
                        </StackPanel>
                    </Grid>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="{Binding UserDetails.UserId}" />
                        <Run Text="{Binding UserDetails.RegisteredVersion}" />
                        <Run>
                            <Run.Resources>
                                <Style TargetType="{x:Type Run}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UserDetails.IsPremium}" Value="True">
                                            <Setter Property="Text" Value="プレミアム会員" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding UserDetails.IsPremium}" Value="False">
                                            <Setter Property="Text" Value="一般会員" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Resources>
                        </Run>
                        <Run Text="{Binding UserDetails.FolloweeCount,StringFormat='フォロー数：{0:N0} 人'}" />
                        <Run Text="{Binding UserDetails.FollowerCount,StringFormat='フォロワー数：{0:N0} 人'}" />
                        <Run Text="{Binding UserDetails.CurrentLevel,StringFormat='レベル：{0:N0}Lv'}" />
                    </TextBlock>
                </StackPanel>
                <ScrollViewer Grid.Row="1" Background="{DynamicResource InactiveBackgroundBrushKey}">
                    <controls:HtmlRenderer HtmlText="{Binding UserDetails.Description}" FontSize="14" />
                </ScrollViewer>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <metro:TabView Style="{DynamicResource HorizontalViewStyle}" Background="{DynamicResource ActiveBackgroundBrushKey}" Height="38" ItemsSource="{Binding UserItems}" SelectedValue="{Binding SelectedItem}" />
            <ItemsControl Grid.Row="1" ItemsSource="{Binding UserItems}">
                <ItemsControl.Resources>
                    <DataTemplate DataType="{x:Type vm:UserNicoRepoViewModel}">
                        <v:UserNicoRepo />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:UserFolloweeViewModel}">
                        <v:UserFollowing />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:UserFollowerViewModel}">
                        <v:UserFollower />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:UserMylistViewModel}">
                        <v:UserMylist />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:UserVideoViewModel}">
                        <v:UserVideo />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:UserSeriesViewModel}">
                        <v:UserSeries />
                    </DataTemplate>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:TabItemViewModel}">
                        <ContentControl Content="{Binding}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
        <metro:ProgressRing Grid.RowSpan="2" IsActive="{Binding IsActive}" />
    </Grid>
</UserControl>
