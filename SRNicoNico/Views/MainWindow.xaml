<metro:MetroWindow x:Class="SRNicoNico.Views.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   xmlns:m="clr-namespace:SRNicoNico.Models.NicoNicoViewer"
                   xmlns:vm="clr-namespace:SRNicoNico.ViewModels"
                   xmlns:v="clr-namespace:SRNicoNico.Views"
                   mc:Ignorable="d"
                   IsRestoringWindowPlacement="True"
		           Foreground="{DynamicResource ActiveForegroundBrushKey}"
		           Background="{DynamicResource ThemeBrushKey}"
                   WindowStyle="SingleBorderWindow"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   FontFamily="{Binding  Source={x:Static m:Settings.Instance},Path=UserSelectedFont,Mode=TwoWay}"
                   d:DataContext="{d:DesignInstance {x:Type vm:MainWindowViewModel}}"
                
                   Title="{Binding Title}" Height="700" Width="600" 
                   PreviewKeyDown="MetroWindow_PreviewKeyDown"
                   PreviewMouseDown="MetroWindow_PreviewMouseDown"
                   PreviewKeyUp="MetroWindow_PreviewKeyUp">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneWay}">
            <l:TransitionInteractionMessageAction />
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <l:WindowCloseCancelBehavior CloseCanceledCallbackMethodTarget="{Binding}" CloseCanceledCallbackMethodName="Closing" CanClose="{Binding CanClose}"/>
    </i:Interaction.Behaviors>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>

        <Border metro:MetroWindow.IsCaptionBar="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1"  Text="{Binding Title}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundBrushKey}" FontSize="18" Margin="3,0,0,0" VerticalAlignment="Center" />
                <metro:CaptionButton Grid.Column="2" IsEnabled="{Binding CanShowHelpView}" ToolTip="表示しているタブのヘルプ画面が有れば表示します" ToolTipService.ShowOnDisabled="False">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ShowHelpView" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <metro:CaptionButton.Template>
                        <ControlTemplate TargetType="metro:CaptionButton">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter x:Name="contentPresenter" />
                                    <Path x:Name="icon" Fill="{TemplateBinding Foreground}" Width="10" Height="20" Stretch="Uniform" Visibility="Visible" Data="M10,19H13V22H10V19M12,2C17.35,2.22 19.68,7.62 16.5,11.67C15.67,12.67 14.33,13.33 13.67,14.17C13,15 13,16 13,17H10C10,15.33 10,13.92 10.67,12.92C11.33,11.92 12.67,11.33 13.5,10.67C15.92,8.43 15.32,5.26 12,5A3,3 0 0,0 9,8H6A6,6 0 0,1 12,2Z" RenderTransformOrigin="0.5,0.5" >
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="8.797"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </metro:CaptionButton.Template>
                </metro:CaptionButton>
                <metro:CaptionButton Grid.Column="3" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=Topmost, Mode=OneWayToSource}" ToolTip="常に手前に表示" Mode="Toggle" ToolTipService.ShowOnDisabled="False">
                    <metro:CaptionButton.Template>
                        <ControlTemplate TargetType="metro:CaptionButton">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter x:Name="contentPresenter" />
                                    <Path x:Name="icon" Fill="{TemplateBinding Foreground}" Width="10" Height="20" Stretch="Uniform" Visibility="Visible" Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z" RenderTransformOrigin="0.5,0.5" >
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="8.797"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentBrushKey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </metro:CaptionButton.Template>
                </metro:CaptionButton>
                <metro:SystemButtons Grid.Column="4" VerticalAlignment="Top" />
            </Grid>
        </Border>

        <v:MainContent Grid.Row="1" DataContext="{Binding MainContent}" />

        <DockPanel x:Name="statusBar" x:FieldModifier="private" Grid.Row="2" Height="23" Background="{DynamicResource AccentBrushKey}" >
            <Border DockPanel.Dock="Right" Width="{Binding ActualWidth, ElementName=resizeGrip}" />
            <v:StatusBar DataContext="{Binding StatusBar}"/>
        </DockPanel>

        <metro:ResizeGrip Grid.Row="1" Grid.RowSpan="2" x:Name="resizeGrip" x:FieldModifier="private" HorizontalAlignment="Right" VerticalAlignment="Bottom"
						  WindowChrome.ResizeGripDirection="BottomRight" />
    </Grid>
</metro:MetroWindow>
