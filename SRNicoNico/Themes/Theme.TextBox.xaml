<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls">
    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Copy" />
        <MenuItem Command="ApplicationCommands.Cut" />
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>
    <Style TargetType="{x:Type metro:PromptTextBox}" BasedOn="{StaticResource {x:Type metro:PromptTextBox}}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"	Value="True" />
        <Setter Property="Background"	Value="{DynamicResource SemiactiveBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SemiactiveBorderBrushKey}" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="BorderThickness" Value=".99" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Text" Value="" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" Margin="{TemplateBinding Padding}" Background="Transparent" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Left">
                            <Path Data="M35.749999,0.5 L70.999998,48.5 L0.49999973,48.5 z" Fill="{DynamicResource ValidationErrorBrushKey}" Stretch="Fill" Width="10" Height="10" HorizontalAlignment="Left" Margin="10,0,0,0" />
                            <Border Background="{DynamicResource ValidationErrorBrushKey}" Padding="3">
                                <ItemsControl ItemsSource="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.Errors)}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ErrorContent}" Margin="2" Foreground="{DynamicResource ActiveForegroundBrushKey}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Border>
                        </StackPanel>
                        <Border BorderThickness=".99" BorderBrush="{DynamicResource ValidationErrorBrushKey}" HorizontalAlignment="Left">
                            <AdornedElementPlaceholder x:Name="Placeholder" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
